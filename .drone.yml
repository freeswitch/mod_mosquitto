---
kind: pipeline
name: unit-tests

steps:
    - name: bootstrap
      image: signalwire/freeswitch-public-base
      pull: always
      commands:
      - ./bootstrap.sh

    - name: configure make and check
      image: signalwire/freeswitch-public-base
      pull: always
      environment:
        REPOTOKEN:
          from_secret: repotoken
      commands:
      - export WORK_DIR=$PWD
      - echo $WORK_DIR
      - echo "machine freeswitch.signalwire.com password $REPOTOKEN" > /etc/apt/auth.conf
      - echo "deb http://ftp.de.debian.org/debian testing main" > /etc/apt/sources.list
      - apt-get update
      - apt-get -y -t testing install libmosquitto-dev
      - apt-get -y install libfreeswitch-dev freeswitch-mod-console
      - export REPOTOKEN=''
      - rm -rf /etc/apt/auth.conf
      - ./bootstrap.sh
      - ./configure
      - echo '#!/bin/bash\nmake -j`nproc --all` |& tee $WORK_DIR/unit-tests-build-result.txt\nexitstatus=$${PIPESTATUS[0]}\necho $$exitstatus > $WORK_DIR/build-status.txt\n' > build.sh
      - chmod +x build.sh
      - ./build.sh
      - (make install || true)
      - mkdir -p $WORK_DIR/tests/unit
      - cat /proc/sys/kernel/core_pattern
      - ./run-tests-parallel.sh 
      - echo 0 > $WORK_DIR/tests/unit/run-tests-status.txt
      - ./collect-test-logs.sh && exit 0 || echo 'Some tests failed'
      - ls -la ./test
      - echo 1 > $WORK_DIR/tests/unit/run-tests-status.txt
      - ls -la /cores
      - mkdir -p $WORK_DIR/tests/unit/logs
      - (mv test/artifacts.html $WORK_DIR/tests/unit/logs/ || true)
      - (mv test/log_run-tests_*.html $WORK_DIR/tests/unit/logs/ || true)
      - (mv test/backtrace_*.txt $WORK_DIR/tests/unit/logs/ || true)
      - ls -la $WORK_DIR/tests/unit/logs

    - name: notify
      image: signalwire/drone-notify
      pull: always
      environment:
        SLACK_WEBHOOK_URL:
          from_secret: slack_webhook_url
        ENV_FILE:
          from_secret: notify_env
      commands:
      - /root/unit-tests-notify.sh

trigger:
  branch:
  - master
  event:
  - pull_request
  - push

---
kind: pipeline
name: scan-build

steps:
    - name: scan-build
      image: signalwire/freeswitch-public-base
      pull: always
      environment:
        REPOTOKEN:
          from_secret: repotoken
      commands:
      - echo "machine freeswitch.signalwire.com password $REPOTOKEN" > /etc/apt/auth.conf
      - apt-get update
      - DEBIAN_FRONTEND=noninteractive apt-get -yq install clang-tools-7
      - echo "deb http://ftp.de.debian.org/debian testing main" > /etc/apt/sources.list
      - apt-get update
      - apt-get -y -t testing install libmosquitto-dev
      - apt-get -y install libfreeswitch-dev freeswitch-mod-console
      - export REPOTOKEN=''
      - rm -rf /etc/apt/auth.conf
      - export WORK_DIR=$PWD
      - echo $WORK_DIR
      - ./bootstrap.sh
      - ./configure
      - mkdir -p ./scan-build
      - echo '#!/bin/bash\nscan-build-7 -o ./scan-build/ make -j`nproc --all` |& tee ./scan-build-result.txt\nexitstatus=$${PIPESTATUS[0]}\necho $$exitstatus > ./scan-build-status.txt\n' > scan.sh
      - chmod +x scan.sh
      - ./scan.sh
      - exitstatus=`cat ./scan-build-status.txt`
      - echo "*** Exit status is $exitstatus"

    - name: notify
      image: signalwire/drone-notify
      pull: always
      environment:
        SLACK_WEBHOOK_URL:
          from_secret: slack_webhook_url
        ENV_FILE:
          from_secret: notify_env
      commands:
      - /root/scan-build-notify.sh

trigger:
  branch:
  - master
  event:
  - pull_request
  - push
---
kind: signature
hmac: 852b025750fbcd66136d7cb265df78227042a93ec6d9cb9826a765eabd6b43d8

...
